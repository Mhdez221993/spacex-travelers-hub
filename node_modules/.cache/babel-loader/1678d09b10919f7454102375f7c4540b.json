{"ast":null,"code":"const BASE_URL = 'https://api.spacexdata.com/v3/dragons';\nconst LOAD_DRAGONS = 'dragons/load';\nconst BOOK_DRAGON = 'dragons/book';\nconst CANCEL_BOOKING = 'dragons/cancel-booking';\n\nconst loadDragons = payload => ({\n  type: LOAD_DRAGONS,\n  payload\n});\n\nexport const bookDragon = id => ({\n  type: BOOK_DRAGON,\n  id\n});\nexport const cancelBooking = id => ({\n  type: CANCEL_BOOKING,\n  id\n});\nexport const fetchDragons = async dispatch => {\n  const response = await fetch(BASE_URL);\n  const dragons = await response.json();\n  dispatch(loadDragons(dragons.map(dragon => ({\n    id: dragon.id,\n    name: dragon.name,\n    type: dragon.type,\n    description: dragon.description,\n    images: dragon.flickr_images\n  }))));\n};\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case LOAD_DRAGONS:\n      return action.payload;\n\n    case BOOK_DRAGON:\n      return state.map(dragon => {\n        if (dragon.id !== action.id) {\n          return dragon;\n        }\n\n        return { ...dragon,\n          reserved: true\n        };\n      });\n\n    case CANCEL_BOOKING:\n      return state.map(dragon => {\n        if (dragon.id !== action.id) {\n          return dragon;\n        }\n\n        return { ...dragon,\n          reserved: false\n        };\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/moises/develop/spacex-travelers-hub/src/redux/dragons .js"],"names":["BASE_URL","LOAD_DRAGONS","BOOK_DRAGON","CANCEL_BOOKING","loadDragons","payload","type","bookDragon","id","cancelBooking","fetchDragons","dispatch","response","fetch","dragons","json","map","dragon","name","description","images","flickr_images","reducer","state","action","reserved"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,uCAAjB;AACA,MAAMC,YAAY,GAAG,cAArB;AACA,MAAMC,WAAW,GAAG,cAApB;AACA,MAAMC,cAAc,GAAG,wBAAvB;;AAEA,MAAMC,WAAW,GAAGC,OAAO,KAAK;AAC9BC,EAAAA,IAAI,EAAEL,YADwB;AAE9BI,EAAAA;AAF8B,CAAL,CAA3B;;AAKA,OAAO,MAAME,UAAU,GAAGC,EAAE,KAAK;AAC/BF,EAAAA,IAAI,EAAEJ,WADyB;AAE/BM,EAAAA;AAF+B,CAAL,CAArB;AAKP,OAAO,MAAMC,aAAa,GAAGD,EAAE,KAAK;AAClCF,EAAAA,IAAI,EAAEH,cAD4B;AAElCK,EAAAA;AAFkC,CAAL,CAAxB;AAKP,OAAO,MAAME,YAAY,GAAG,MAAMC,QAAN,IAAkB;AAC5C,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACb,QAAD,CAA5B;AACA,QAAMc,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAtB;AAEAJ,EAAAA,QAAQ,CAACP,WAAW,CAACU,OAAO,CAACE,GAAR,CAAYC,MAAM,KAAK;AAC1CT,IAAAA,EAAE,EAAES,MAAM,CAACT,EAD+B;AAE1CU,IAAAA,IAAI,EAAED,MAAM,CAACC,IAF6B;AAG1CZ,IAAAA,IAAI,EAAEW,MAAM,CAACX,IAH6B;AAI1Ca,IAAAA,WAAW,EAAEF,MAAM,CAACE,WAJsB;AAK1CC,IAAAA,MAAM,EAAEH,MAAM,CAACI;AAL2B,GAAL,CAAlB,CAAD,CAAZ,CAAR;AAOD,CAXM;;AAaP,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACtC,UAAQA,MAAM,CAAClB,IAAf;AACE,SAAKL,YAAL;AACE,aAAOuB,MAAM,CAACnB,OAAd;;AACF,SAAKH,WAAL;AACE,aAAOqB,KAAK,CAACP,GAAN,CAAUC,MAAM,IAAI;AACzB,YAAIA,MAAM,CAACT,EAAP,KAAcgB,MAAM,CAAChB,EAAzB,EAA6B;AAC3B,iBAAOS,MAAP;AACD;;AAED,eAAO,EACL,GAAGA,MADE;AAELQ,UAAAA,QAAQ,EAAE;AAFL,SAAP;AAID,OATM,CAAP;;AAUF,SAAKtB,cAAL;AACE,aAAOoB,KAAK,CAACP,GAAN,CAAUC,MAAM,IAAI;AACzB,YAAIA,MAAM,CAACT,EAAP,KAAcgB,MAAM,CAAChB,EAAzB,EAA6B;AAC3B,iBAAOS,MAAP;AACD;;AAED,eAAO,EACL,GAAGA,MADE;AAELQ,UAAAA,QAAQ,EAAE;AAFL,SAAP;AAID,OATM,CAAP;;AAUF;AACE,aAAOF,KAAP;AA1BJ;AA4BD,CA7BD;;AA+BA,eAAeD,OAAf","sourcesContent":["const BASE_URL = 'https://api.spacexdata.com/v3/dragons';\nconst LOAD_DRAGONS = 'dragons/load';\nconst BOOK_DRAGON = 'dragons/book';\nconst CANCEL_BOOKING = 'dragons/cancel-booking';\n\nconst loadDragons = payload => ({\n  type: LOAD_DRAGONS,\n  payload,\n});\n\nexport const bookDragon = id => ({\n  type: BOOK_DRAGON,\n  id,\n});\n\nexport const cancelBooking = id => ({\n  type: CANCEL_BOOKING,\n  id,\n});\n\nexport const fetchDragons = async dispatch => {\n  const response = await fetch(BASE_URL);\n  const dragons = await response.json();\n\n  dispatch(loadDragons(dragons.map(dragon => ({\n    id: dragon.id,\n    name: dragon.name,\n    type: dragon.type,\n    description: dragon.description,\n    images: dragon.flickr_images,\n  }))));\n};\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case LOAD_DRAGONS:\n      return action.payload;\n    case BOOK_DRAGON:\n      return state.map(dragon => {\n        if (dragon.id !== action.id) {\n          return dragon;\n        }\n\n        return {\n          ...dragon,\n          reserved: true,\n        };\n      });\n    case CANCEL_BOOKING:\n      return state.map(dragon => {\n        if (dragon.id !== action.id) {\n          return dragon;\n        }\n\n        return {\n          ...dragon,\n          reserved: false,\n        };\n      });\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/* eslint-disable camelcase */\nimport axios from 'axios';\nexport const GET_MISSIONS_REQUEST = 'GET_MISSIONS_REQUEST';\nexport const GET_MISSIONS_SUCCESS = 'GET_MISSIONS_SUCCESS';\nexport const GET_MISSIONS_FAILURE = 'GET_MISSIONS_FAILURE';\nexport const JOIN_MISSION = 'JOIN_MISSION';\nexport const EXIT_MISSION = 'EXIT_MISSION';\n\nconst getMissionsRequest = () => ({\n  type: GET_MISSIONS_REQUEST\n});\n\nconst getMissionsSuccess = payload => ({\n  type: GET_MISSIONS_SUCCESS,\n  payload\n});\n\nconst getMissionsFailure = error => ({\n  type: GET_MISSIONS_FAILURE,\n  payload: error\n});\n\nexport const joinMission = id => ({\n  type: JOIN_MISSION,\n  id\n});\nexport const exitMission = id => ({\n  type: EXIT_MISSION,\n  id\n});\n\nconst getMissions = () => async dispatch => {\n  dispatch(getMissionsRequest());\n  axios.get('https://api.spacexdata.com/v3/missions').then(response => {\n    const result = response.data.map(({\n      mission_id,\n      mission_name,\n      description\n    }) => ({\n      id: mission_id,\n      missionName: mission_name,\n      missionDescription: description\n    }));\n    dispatch(getMissionsSuccess(result));\n  }).catch(error => {\n    dispatch(getMissionsFailure(error));\n  });\n};\n\nexport default getMissions;","map":{"version":3,"sources":["/home/moises/develop/spacex-travelers-hub/src/API/missions.js"],"names":["axios","GET_MISSIONS_REQUEST","GET_MISSIONS_SUCCESS","GET_MISSIONS_FAILURE","JOIN_MISSION","EXIT_MISSION","getMissionsRequest","type","getMissionsSuccess","payload","getMissionsFailure","error","joinMission","id","exitMission","getMissions","dispatch","get","then","response","result","data","map","mission_id","mission_name","description","missionName","missionDescription","catch"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;;AAEP,MAAMC,kBAAkB,GAAG,OAAO;AAChCC,EAAAA,IAAI,EAAEN;AAD0B,CAAP,CAA3B;;AAIA,MAAMO,kBAAkB,GAAGC,OAAO,KAAK;AACrCF,EAAAA,IAAI,EAAEL,oBAD+B;AAErCO,EAAAA;AAFqC,CAAL,CAAlC;;AAKA,MAAMC,kBAAkB,GAAGC,KAAK,KAAK;AACnCJ,EAAAA,IAAI,EAAEJ,oBAD6B;AAEnCM,EAAAA,OAAO,EAAEE;AAF0B,CAAL,CAAhC;;AAKA,OAAO,MAAMC,WAAW,GAAGC,EAAE,KAAK;AAChCN,EAAAA,IAAI,EAAEH,YAD0B;AAEhCS,EAAAA;AAFgC,CAAL,CAAtB;AAKP,OAAO,MAAMC,WAAW,GAAGD,EAAE,KAAK;AAChCN,EAAAA,IAAI,EAAEF,YAD0B;AAEhCQ,EAAAA;AAFgC,CAAL,CAAtB;;AAKP,MAAME,WAAW,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC1CA,EAAAA,QAAQ,CAACV,kBAAkB,EAAnB,CAAR;AAEAN,EAAAA,KAAK,CAACiB,GAAN,CAAU,wCAAV,EACGC,IADH,CACQC,QAAQ,IAAI;AAChB,UAAMC,MAAM,GAAGD,QAAQ,CAACE,IAAT,CAAcC,GAAd,CAAkB,CAAC;AAChCC,MAAAA,UADgC;AACpBC,MAAAA,YADoB;AACNC,MAAAA;AADM,KAAD,MAE1B;AACLZ,MAAAA,EAAE,EAAEU,UADC;AAELG,MAAAA,WAAW,EAAEF,YAFR;AAGLG,MAAAA,kBAAkB,EAAEF;AAHf,KAF0B,CAAlB,CAAf;AAQAT,IAAAA,QAAQ,CAACR,kBAAkB,CAACY,MAAD,CAAnB,CAAR;AACD,GAXH,EAYGQ,KAZH,CAYSjB,KAAK,IAAI;AACdK,IAAAA,QAAQ,CAACN,kBAAkB,CAACC,KAAD,CAAnB,CAAR;AACD,GAdH;AAeD,CAlBD;;AAoBA,eAAeI,WAAf","sourcesContent":["/* eslint-disable camelcase */\nimport axios from 'axios';\n\nexport const GET_MISSIONS_REQUEST = 'GET_MISSIONS_REQUEST';\nexport const GET_MISSIONS_SUCCESS = 'GET_MISSIONS_SUCCESS';\nexport const GET_MISSIONS_FAILURE = 'GET_MISSIONS_FAILURE';\nexport const JOIN_MISSION = 'JOIN_MISSION';\nexport const EXIT_MISSION = 'EXIT_MISSION';\n\nconst getMissionsRequest = () => ({\n  type: GET_MISSIONS_REQUEST,\n});\n\nconst getMissionsSuccess = payload => ({\n  type: GET_MISSIONS_SUCCESS,\n  payload,\n});\n\nconst getMissionsFailure = error => ({\n  type: GET_MISSIONS_FAILURE,\n  payload: error,\n});\n\nexport const joinMission = id => ({\n  type: JOIN_MISSION,\n  id,\n});\n\nexport const exitMission = id => ({\n  type: EXIT_MISSION,\n  id,\n});\n\nconst getMissions = () => async dispatch => {\n  dispatch(getMissionsRequest());\n\n  axios.get('https://api.spacexdata.com/v3/missions')\n    .then(response => {\n      const result = response.data.map(({\n        mission_id, mission_name, description,\n      }) => ({\n        id: mission_id,\n        missionName: mission_name,\n        missionDescription: description,\n      }));\n\n      dispatch(getMissionsSuccess(result));\n    })\n    .catch(error => {\n      dispatch(getMissionsFailure(error));\n    });\n};\n\nexport default getMissions;\n"]},"metadata":{},"sourceType":"module"}
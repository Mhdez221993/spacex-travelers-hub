{"ast":null,"code":"/* eslint-disable camelcase */\nimport getRokects from '../API/rockets';\nconst SET_ROCKETS = 'rocketStore/rockets/SET_ROCKETS';\nconst SET_RESERVATION = 'rocketStore/rockets/SET_RESERVATION';\nconst CANLCEL_RESERVATION = 'rocketStore/rockets/CANLCEL_RESERVATION';\nconst initialState = [];\n\nconst setRockets = payload => ({\n  type: SET_ROCKETS,\n  payload\n});\n\nexport const setReservation = payload => ({\n  type: SET_RESERVATION,\n  payload\n});\nexport const cancelReservation = payload => ({\n  type: CANLCEL_RESERVATION,\n  payload\n});\nexport const loadRockets = () => async dispatch => {\n  const rockets = await getRokects();\n\n  if (rockets) {\n    dispatch(setRockets(rockets));\n  }\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_ROCKETS:\n      {\n        const saved = Object.entries(action.payload).map(([id, rocket]) => {\n          const {\n            description,\n            rocket_name,\n            flickr_images: [img]\n          } = rocket;\n          return {\n            id,\n            description,\n            rocket_name,\n            img\n          };\n        });\n        return state.concat(saved);\n      }\n\n    case SET_RESERVATION:\n      return state.map(rocket => {\n        if (rocket.id !== action.payload) {\n          return rocket;\n        }\n\n        return { ...rocket,\n          reserved: true\n        };\n      });\n\n    case CANLCEL_RESERVATION:\n      return state.map(rocket => {\n        if (rocket.id !== action.payload) return rocket;\n        return { ...rocket,\n          reserved: false\n        };\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/moises/develop/spacex-travelers-hub/src/redux/rockets.js"],"names":["getRokects","SET_ROCKETS","SET_RESERVATION","CANLCEL_RESERVATION","initialState","setRockets","payload","type","setReservation","cancelReservation","loadRockets","dispatch","rockets","reducer","state","action","saved","Object","entries","map","id","rocket","description","rocket_name","flickr_images","img","concat","reserved"],"mappings":"AAAA;AACA,OAAOA,UAAP,MAAuB,gBAAvB;AAEA,MAAMC,WAAW,GAAG,iCAApB;AACA,MAAMC,eAAe,GAAG,qCAAxB;AACA,MAAMC,mBAAmB,GAAG,yCAA5B;AACA,MAAMC,YAAY,GAAG,EAArB;;AAEA,MAAMC,UAAU,GAAGC,OAAO,KAAK;AAC7BC,EAAAA,IAAI,EAAEN,WADuB;AAE7BK,EAAAA;AAF6B,CAAL,CAA1B;;AAKA,OAAO,MAAME,cAAc,GAAGF,OAAO,KAAK;AACxCC,EAAAA,IAAI,EAAEL,eADkC;AAExCI,EAAAA;AAFwC,CAAL,CAA9B;AAKP,OAAO,MAAMG,iBAAiB,GAAGH,OAAO,KAAK;AAC3CC,EAAAA,IAAI,EAAEJ,mBADqC;AAE3CG,EAAAA;AAF2C,CAAL,CAAjC;AAKP,OAAO,MAAMI,WAAW,GAAG,MAAM,MAAMC,QAAN,IAAkB;AACjD,QAAMC,OAAO,GAAG,MAAMZ,UAAU,EAAhC;;AACA,MAAIY,OAAJ,EAAa;AACXD,IAAAA,QAAQ,CAACN,UAAU,CAACO,OAAD,CAAX,CAAR;AACD;AACF,CALM;;AAOP,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACR,IAAf;AACE,SAAKN,WAAL;AAAkB;AAChB,cAAMe,KAAK,GAAGC,MAAM,CAACC,OAAP,CAAeH,MAAM,CAACT,OAAtB,EAA+Ba,GAA/B,CAAmC,CAAC,CAACC,EAAD,EAAKC,MAAL,CAAD,KAAkB;AACjE,gBAAM;AAAEC,YAAAA,WAAF;AAAeC,YAAAA,WAAf;AAA4BC,YAAAA,aAAa,EAAE,CAACC,GAAD;AAA3C,cAAqDJ,MAA3D;AACA,iBAAO;AACLD,YAAAA,EADK;AAELE,YAAAA,WAFK;AAGLC,YAAAA,WAHK;AAILE,YAAAA;AAJK,WAAP;AAMD,SARa,CAAd;AASA,eAAOX,KAAK,CAACY,MAAN,CAAaV,KAAb,CAAP;AACD;;AACD,SAAKd,eAAL;AACE,aAAOY,KAAK,CAACK,GAAN,CAAUE,MAAM,IAAI;AACzB,YAAIA,MAAM,CAACD,EAAP,KAAcL,MAAM,CAACT,OAAzB,EAAkC;AAChC,iBAAOe,MAAP;AACD;;AACD,eAAO,EACL,GAAGA,MADE;AAELM,UAAAA,QAAQ,EAAE;AAFL,SAAP;AAID,OARM,CAAP;;AASF,SAAKxB,mBAAL;AACE,aAAOW,KAAK,CAACK,GAAN,CAAUE,MAAM,IAAI;AACzB,YAAIA,MAAM,CAACD,EAAP,KAAcL,MAAM,CAACT,OAAzB,EAAkC,OAAOe,MAAP;AAClC,eAAO,EAAE,GAAGA,MAAL;AAAaM,UAAAA,QAAQ,EAAE;AAAvB,SAAP;AACD,OAHM,CAAP;;AAIF;AACE,aAAOb,KAAP;AA7BJ;AA+BD,CAhCD;;AAkCA,eAAeD,OAAf","sourcesContent":["/* eslint-disable camelcase */\nimport getRokects from '../API/rockets';\n\nconst SET_ROCKETS = 'rocketStore/rockets/SET_ROCKETS';\nconst SET_RESERVATION = 'rocketStore/rockets/SET_RESERVATION';\nconst CANLCEL_RESERVATION = 'rocketStore/rockets/CANLCEL_RESERVATION';\nconst initialState = [];\n\nconst setRockets = payload => ({\n  type: SET_ROCKETS,\n  payload,\n});\n\nexport const setReservation = payload => ({\n  type: SET_RESERVATION,\n  payload,\n});\n\nexport const cancelReservation = payload => ({\n  type: CANLCEL_RESERVATION,\n  payload,\n});\n\nexport const loadRockets = () => async dispatch => {\n  const rockets = await getRokects();\n  if (rockets) {\n    dispatch(setRockets(rockets));\n  }\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_ROCKETS: {\n      const saved = Object.entries(action.payload).map(([id, rocket]) => {\n        const { description, rocket_name, flickr_images: [img] } = rocket;\n        return {\n          id,\n          description,\n          rocket_name,\n          img,\n        };\n      });\n      return state.concat(saved);\n    }\n    case SET_RESERVATION:\n      return state.map(rocket => {\n        if (rocket.id !== action.payload) {\n          return rocket;\n        }\n        return {\n          ...rocket,\n          reserved: true,\n        };\n      });\n    case CANLCEL_RESERVATION:\n      return state.map(rocket => {\n        if (rocket.id !== action.payload) return rocket;\n        return { ...rocket, reserved: false };\n      });\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}